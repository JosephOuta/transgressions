.fns = ~as.factor(.))) %>%
mutate(Evaluatee = fct_relevel(evaluatee, "self.US", "tar.US", "self.comm", "tar.comm")) %>%
select(-evaluatee) %>%
relocate(ratings,  .after = Evaluatee) %>%
separate("Evaluatee", c("object", "region")) %>%
ggplot(aes(x = object,
y = ratings)) +
stat_summary(fun.y = "mean",
geom = "line") +
stat_summary(fun.data = "mean_cl_boot",
geom = "linerange") +
facet_wrap(~region)
d.status %>%
pivot_longer(cols = -ResponseId,
names_to = "evaluatee",
values_to = "ratings") %>%
mutate(across(.cols = "evaluatee",
.fns = ~as.factor(.))) %>%
mutate(Evaluatee = fct_relevel(evaluatee, "self.US", "tar.US", "self.comm", "tar.comm")) %>%
select(-evaluatee) %>%
relocate(ratings,  .after = Evaluatee) %>%
separate("Evaluatee", c("object", "region")) %>%
ggplot(aes(x = object,
y = ratings)) +
stat_summary(fun.y = "mean",
geom = "point") +
stat_summary(fun.data = "mean_cl_boot",
geom = "linerange") +
geom_smooth(method = "lm", se = F)
d.status %>%
pivot_longer(cols = -ResponseId,
names_to = "evaluatee",
values_to = "ratings") %>%
mutate(across(.cols = "evaluatee",
.fns = ~as.factor(.))) %>%
mutate(Evaluatee = fct_relevel(evaluatee, "self.US", "tar.US", "self.comm", "tar.comm")) %>%
select(-evaluatee) %>%
relocate(ratings,  .after = Evaluatee) %>%
separate("Evaluatee", c("object", "region")) %>%
ggplot(aes(x = object,
y = ratings)) +
stat_summary(fun.y = "mean",
geom = "point") +
stat_summary(fun.data = "mean_cl_boot",
geom = "linerange") +
geom_smooth(method = "lm", se = F) +
facet_wrap(~region)
d.status %>%
pivot_longer(cols = -ResponseId,
names_to = "evaluatee",
values_to = "ratings") %>%
mutate(across(.cols = "evaluatee",
.fns = ~as.factor(.))) %>%
mutate(Evaluatee = fct_relevel(evaluatee, "self.US", "tar.US", "self.comm", "tar.comm")) %>%
select(-evaluatee) %>%
relocate(ratings,  .after = Evaluatee) %>%
separate("Evaluatee", c("object", "region")) %>%
ggplot(aes(x = object,
y = ratings)) +
stat_summary(fun.y = "mean",
geom = "point") +
# stat_summary(fun.data = "mean_cl_boot",
#              geom = "linerange") +
geom_smooth(method = "lm", se = F) +
facet_wrap(~region)
d.status %>%
pivot_longer(cols = -ResponseId,
names_to = "evaluatee",
values_to = "ratings") %>%
mutate(across(.cols = "evaluatee",
.fns = ~as.factor(.))) %>%
mutate(Evaluatee = fct_relevel(evaluatee, "self.US", "tar.US", "self.comm", "tar.comm")) %>%
select(-evaluatee) %>%
relocate(ratings,  .after = Evaluatee) %>%
separate("Evaluatee", c("object", "region")) %>%
ggplot(aes(x = object,
y = ratings)) +
stat_summary(fun.y = "mean",
geom = "point") +
# stat_summary(fun.data = "mean_cl_boot",
#              geom = "linerange") +
facet_wrap(~region)
d.status %>%
pivot_longer(cols = -ResponseId,
names_to = "evaluatee",
values_to = "ratings") %>%
drop_na(ratings) %>%
mutate(across(.cols = "evaluatee",
.fns = ~as.factor(.)
)) %>%
ggplot(aes(x = Evaluatee,
y = ratings)) +
stat_summary(fun = "mean",
geom = "point")
d.status %>%
pivot_longer(cols = -ResponseId,
names_to = "evaluatee",
values_to = "ratings") %>%
drop_na(ratings) %>%
mutate(across(.cols = "evaluatee",
.fns = ~as.factor(.)
)) %>%
ggplot(aes(x = evaluatee,
y = ratings)) +
stat_summary(fun = "mean",
geom = "point")
#factors separated and reordered
d.status %>%
pivot_longer(cols = -ResponseId,
names_to = "evaluatee",
values_to = "ratings") %>%
mutate(across(.cols = "evaluatee",
.fns = ~as.factor(.))) %>%
mutate(Evaluatee = fct_relevel(evaluatee, "self.US", "tar.US", "self.comm", "tar.comm")) %>%
select(-evaluatee) %>%
relocate(ratings,  .after = Evaluatee) %>%
separate("Evaluatee", c("object", "region")) %>%
ggplot(aes(x = object,
y = ratings)) +
stat_summary(fun.y = "mean",
geom = "bar") +
# stat_summary(fun.data = "mean_cl_boot",
#              geom = "linerange") +
facet_wrap(~region)
#factors separated and reordered
d.status %>%
pivot_longer(cols = -ResponseId,
names_to = "evaluatee",
values_to = "ratings") %>%
mutate(across(.cols = "evaluatee",
.fns = ~as.factor(.))) %>%
mutate(Evaluatee = fct_relevel(evaluatee, "self.US", "tar.US", "self.comm", "tar.comm")) %>%
select(-evaluatee) %>%
relocate(ratings,  .after = Evaluatee) %>%
separate("Evaluatee", c("object", "region")) %>%
ggplot(aes(x = object,
y = ratings)) +
stat_summary(fun.y = "mean",
geom = "point") +
# stat_summary(fun.data = "mean_cl_boot",
#              geom = "linerange") +
facet_wrap(~region)
#combine status and honor values
d.status
colnames(d)
d %>%
rowwise() %>%  ## BUT HOW TO DEAL WITH NA VALUES???
mutate(honor_composite = mean(c(honor_respect, honor_disres, honor_socialimage,
honor_careimplicatio, honor_defendfam, na.rm = T))) %>%
ungroup()
d %>%
rowwise() %>%  ## BUT HOW TO DEAL WITH NA VALUES???
mutate(honor_composite = mean(c(honor_respect, honor_disres, honor_socialimage,
honor_careimplicatio, honor_defendfam, na.rm = T)))
d %>%
rowwise() %>%  ## BUT HOW TO DEAL WITH NA VALUES???
mutate(honor_composite = mean(c(honor_respect, honor_disres, honor_socialimage,
honor_careimplicatio, honor_defendfam, na.rm = T))) %>%
names()
d %>%
rowwise() %>%  ## BUT HOW TO DEAL WITH NA VALUES???
mutate(honor_composite = mean(c(honor_respect, honor_disres, honor_socialimage,
honor_careimplicatio, honor_defendfam, na.rm = T))) %>%
select(honor_composite)
d %>%
dplyr::select(starts_with("honor")) %>%
rowwise() %>%  ## BUT HOW TO DEAL WITH NA VALUES???
mutate(honor_composite = mean(c(honor_respect, honor_disres, honor_socialimage,
honor_careimplicatio, honor_defendfam, na.rm = T))) %>%
names()
d %>%
dplyr::select(ResponseId, starts_with("honor")) %>%
rowwise() %>%  ## BUT HOW TO DEAL WITH NA VALUES???
mutate(honor_composite = mean(c(honor_respect, honor_disres, honor_socialimage,
honor_careimplicatio, honor_defendfam, na.rm = T))) %>%
names()
df.honor <- d %>%
dplyr::select(ResponseId, starts_with("honor")) %>%
rowwise() %>%
mutate(honor_composite = mean(c(honor_respect, honor_disres, honor_socialimage,
honor_careimplicatio, honor_defendfam, na.rm = T)))
knitr::opts_knit$set(root.dir = normalizePath(".."))
library(dplyr) # for data munging
library(readr)
library(hablar) #you need this for bat ch-converting to numeric
library(tidyverse)
library(forcats) #for reordering factors
grudata <- read_csv("transdata.csv")
grudata <- grudata %>%
slice(-1, -2) %>%
dplyr::filter(Status==0) %>%
dplyr::filter(Finished==1) %>%
retype() %>%  #guesses the right data type and auto-converts (saves time)
names(10)
grudata <- grudata %>%
slice(-1, -2) %>%
dplyr::filter(Status==0) %>%
dplyr::filter(Finished==1) %>%
retype() %>%  #guesses the right data type and auto-converts (saves time)
colnames(grudata)
grudata <- grudata %>%
slice(-1, -2) %>%
dplyr::filter(Status==0) %>%
dplyr::filter(Finished==1) %>%
retype() %>%  #guesses the right data type and auto-converts (saves time)
colnames(grudata)
colnames(grudata)
grudata <- grudata %>%
slice(-1, -2) %>%
dplyr::filter(Status==0) %>%
dplyr::filter(Finished==1) %>%
retype() #guesses the right data type and auto-converts (saves time)
df.honor <- grudata %>%
dplyr::select(ResponseId, starts_with("honor")) %>%
rowwise() %>%
mutate(honor_composite = mean(c(honor_respect, honor_disres, honor_socialimage,
honor_careimplicatio, honor_defendfam, na.rm = T)))
grudata %>%
dplyr::select(ResponseId, starts_with("honor")) %>%
rowwise() %>%
mutate(honor_composite = mean(c(honor_respect, honor_disres, honor_socialimage,
honor_careimplicatio, honor_defendfam, na.rm = T)))
d.status <- grudata %>%
dplyr::select(ResponseId, starts_with("stat")) %>% #select status rating columns
drop_na() %>%
pivot_longer(cols = -ResponseId,
names_to = c("status2", "rating"),
names_sep = "_",
values_to = "values",
values_transform = list(values = as.character)) %>% #make long
convert(num(rating)) %>%
filter(values == "On") %>%
separate(status2, c("variable", "evaluated"), "-") %>%
select(-variable, -values) %>% #deselect variable (list of 'stat') and values (list of 'On')
drop_na(rating) %>%
pivot_wider(names_from = "evaluated",
values_from = "rating")
d.status %>%
print(10)
df.honor %>%
print(10)
df.status <- grudata %>%
dplyr::select(ResponseId, starts_with("stat")) %>% #select status rating columns
drop_na() %>%
pivot_longer(cols = -ResponseId,
names_to = c("status2", "rating"),
names_sep = "_",
values_to = "values",
values_transform = list(values = as.character)) %>% #make long
convert(num(rating)) %>%
filter(values == "On") %>%
separate(status2, c("variable", "evaluated"), "-") %>%
select(-variable, -values) %>% #deselect variable (list of 'stat') and values (list of 'On')
drop_na(rating) %>%
pivot_wider(names_from = "evaluated",
values_from = "rating")
df.status %>%
print(10)
df.status <- grudata %>%
dplyr::select(ResponseId, starts_with("stat")) %>% #select status rating columns
drop_na() %>%
pivot_longer(cols = -ResponseId,
names_to = c("status2", "rating"),
names_sep = "_",
values_to = "values",
values_transform = list(values = as.character)) %>% #make long
convert(num(rating)) %>%
filter(values == "On") %>%
separate(status2, c("variable", "evaluated"), "-") %>%
select(-variable, -values) %>% #deselect variable (list of 'stat') and values (list of 'On')
drop_na(rating) %>%
pivot_wider(names_from = "evaluated",
values_from = "rating")
df.status %>%
print(10)
# longify data to form a tibble with group means
df.status %>%
pivot_longer(cols = -ResponseId,
names_to = "evaluatee",
values_to = "ratings") %>%
group_by(evaluatee) %>%
summarize(mean_rating = mean(ratings, na.rm = T))
#separate and reorder factors
df.status %>%
pivot_longer(cols = -ResponseId,
names_to = "evaluatee",
values_to = "ratings") %>%
mutate(across(.cols = "evaluatee",
.fns = ~as.factor(.))) %>%
mutate(Evaluatee = fct_relevel(evaluatee, "self.US", "tar.US", "self.comm", "tar.comm")) %>%
select(-evaluatee) %>%
relocate(ratings,  .after = Evaluatee) %>%
separate("Evaluatee", c("object", "region")) %>% #separate columns for easier plotting
ggplot(aes(x = object,
y = ratings)) +
stat_summary(fun.y = "mean",
geom = "point") +
# stat_summary(fun.data = "mean_cl_boot",
#              geom = "linerange") +
facet_wrap(~region) #NB: after adding C.Intervals, there doesn't seem to be any group differences
df.honor
#combine status and honor values
df.status
df.honor
grudata %>%
dplyr::select(ResponseId, starts_with("honor")) %>%
rowwise() %>%
mutate(honor_composite = mean(c(honor_respect, honor_disres, honor_socialimage,
honor_careimplicatio, honor_defendfam, na.rm = T))) %>% #avg the 5 scales
select(honor_composite)
grudata %>%
dplyr::select(ResponseId, starts_with("honor")) %>%
rowwise() %>%
mutate(honor_composite = mean(c(honor_respect, honor_disres, honor_socialimage,
honor_careimplicatio, honor_defendfam, na.rm = T))) %>% #avg the 5 scales
select(ResponseId, honor_composite)
df.honor <- grudata %>%
dplyr::select(ResponseId, starts_with("honor")) %>%
rowwise() %>%
mutate(honor_composite = mean(c(honor_respect, honor_disres, honor_socialimage,
honor_careimplicatio, honor_defendfam, na.rm = T))) %>% #avg the 5 scales
select(ResponseId, honor_composite)
df.honor %>%
print(10) #see first 10 rows
df.honor
grudata %>%
dplyr::select(ResponseId, starts_with("honor")) %>%
rowwise() %>%
mutate(honor_composite = round(mean(c(honor_respect, honor_disres, honor_socialimage,
honor_careimplicatio, honor_defendfam, na.rm = T)), 2)) %>% #avg the 5 scales
select(ResponseId, honor_composite)
df.honor <- grudata %>%
dplyr::select(ResponseId, starts_with("honor")) %>%
rowwise() %>%
mutate(honor_composite = round(mean(c(honor_respect, honor_disres, honor_socialimage,
honor_careimplicatio, honor_defendfam, na.rm = T)), 2)) %>% #avg the 5 scales
select(ResponseId, honor_composite)
df.honor %>%
print(10) #see first 10 rows
df.honor
#combine status and honor values
df.status
df.honor
#combine status and honor values
df.status %>%
left_join(df.honor %>%
select(ResponseId, honor_composite),
by = "ResponseId")
#combine status and honor values
df.status %>%
left_join(df.honor %>%
select(ResponseId, honor_composite),
by = "ResponseId") %>%
drop_na()
df.honstat <- df.status %>% #combine status and honor values
left_join(df.honor %>%
select(ResponseId, honor_composite),
by = "ResponseId") %>%
drop_na()
df.honstat
df.honstat %>%
rowwise() %>%
mutate(tar.mean = mean(tar.US, tar.comm))
df.honstat %>%
rowwise() %>%
mutate(tar.mean = mean(c(tar.US, tar.comm)))
df.honstat %>%
rowwise() %>%
mutate(tar.mean = mean(c(tar.US, tar.comm)),
self.mean = mean(c(self.US, self.comm)),
diff = tar.mean - self.mean)
#maybe plot honor against difference between target and self evaluations. Get mean taret and mean Self
df.honstat %>%
rowwise() %>%
mutate(tar.mean = mean(c(tar.US, tar.comm)),
self.mean = mean(c(self.US, self.comm)),
diff = tar.mean - self.mean) %>%
ggplot(aes(x = honor.composite,
y = diff)) +
geom_point()
df.honstat
#maybe plot honor against difference between target and self evaluations. Get mean taret and mean Self
df.honstat %>%
rowwise() %>%
mutate(tar.mean = mean(c(tar.US, tar.comm)),
self.mean = mean(c(self.US, self.comm)),
diff = tar.mean - self.mean) %>%
ggplot(aes(x = honor_composite,
y = diff)) +
geom_point()
#maybe plot honor against difference between target and self evaluations. Get mean taret and mean Self
df.honstat %>%
rowwise() %>%
mutate(tar.mean = mean(c(tar.US, tar.comm)),
self.mean = mean(c(self.US, self.comm)),
diff = tar.mean - self.mean) %>%
ggplot(aes(x = honor_composite,
y = diff)) +
geom_point() +
geom_smooth(method = "lm", se = F)
#maybe plot honor against difference between target and self evaluations. Get mean taret and mean Self
df.honstat %>%
rowwise() %>%
mutate(tar.mean = mean(c(tar.US, tar.comm)),
self.mean = mean(c(self.US, self.comm)),
diff = tar.mean - self.mean) %>%
ggplot(aes(x = honor_composite,
y = diff)) +
geom_point() +
geom_smooth(method = "lm", se = T)
#maybe plot honor against difference between target and self evaluations. Get mean taret and mean Self
df.honstat %>%
rowwise() %>%
mutate(tar.mean = mean(c(tar.US, tar.comm)),
self.mean = mean(c(self.US, self.comm)),
diff = tar.mean - self.mean) %>%
ggplot(aes(x = honor_composite,
y = diff)) +
geom_point() +
geom_smooth(method = "lm", se = T) +
geom_hline(0)
#maybe plot honor against difference between target and self evaluations. Get mean taret and mean Self
df.honstat %>%
rowwise() %>%
mutate(tar.mean = mean(c(tar.US, tar.comm)),
self.mean = mean(c(self.US, self.comm)),
diff = tar.mean - self.mean) %>%
ggplot(aes(x = honor_composite,
y = diff)) +
geom_point() +
geom_smooth(method = "lm", se = T) +
geom_hline(aes(x = 0))
#maybe plot honor against difference between target and self evaluations. Get mean taret and mean Self
df.honstat %>%
rowwise() %>%
mutate(tar.mean = mean(c(tar.US, tar.comm)),
self.mean = mean(c(self.US, self.comm)),
diff = tar.mean - self.mean) %>%
ggplot(aes(x = honor_composite,
y = diff)) +
geom_point() +
geom_smooth(method = "lm", se = T) +
geom_hline(yintercept = 0,
linetype = 2)
#maybe plot honor against difference between target and self evaluations. Get mean taret and mean Self
df.honstat %>%
rowwise() %>%
mutate(tar.mean = mean(c(tar.US, tar.comm)),
self.mean = mean(c(self.US, self.comm)),
diff = tar.mean - self.mean) %>%
ggplot(aes(x = honor_composite,
y = diff)) +
geom_point() +
geom_smooth(method = "lm", se = T) +
geom_hline(yintercept = 0,
linetype = 2,
color = "grey")
#maybe plot honor against difference between target and self evaluations. Get mean taret and mean Self
df.honstat %>%
rowwise() %>%
mutate(tar.mean = mean(c(tar.US, tar.comm)),
self.mean = mean(c(self.US, self.comm)),
diff = tar.mean - self.mean) %>%
ggplot(aes(x = honor_composite,
y = diff)) +
geom_point() +
geom_smooth(method = "lm", se = T) +
geom_hline(yintercept = 0,
linetype = 2,
color = "dark grey")
#maybe plot honor against difference between target and self evaluations. Get mean target and mean Self
df.honstat %>%
rowwise() %>%
mutate(tar.mean = mean(c(tar.US, tar.comm)),
self.mean = mean(c(self.US, self.comm)),
diff = tar.mean - self.mean) %>%
ggplot(aes(x = honor_composite,
y = diff)) +
geom_point() +
geom_smooth(method = "lm", se = T) +
geom_hline(yintercept = 0,
linetype = 2,
color = "dark grey") %>%
labs(y = "Difference between target and self status rating")
#maybe plot honor against difference between target and self evaluations. Get mean target and mean Self
df.honstat %>%
rowwise() %>%
mutate(tar.mean = mean(c(tar.US, tar.comm)),
self.mean = mean(c(self.US, self.comm)),
diff = tar.mean - self.mean) %>%
ggplot(aes(x = honor_composite,
y = diff)) +
geom_point() +
geom_smooth(method = "lm", se = T) +
geom_hline(yintercept = 0,
linetype = 2,
color = "dark grey") +
labs(y = "Difference between target and self status rating")
#maybe plot honor against difference between target and self evaluations. Get mean target and mean Self
df.honstat %>%
rowwise() %>%
mutate(tar.mean = mean(c(tar.US, tar.comm)),
self.mean = mean(c(self.US, self.comm)),
diff = tar.mean - self.mean) %>%
ggplot(aes(x = honor_composite,
y = diff)) +
geom_point() +
geom_smooth(method = "lm", se = T) +
geom_hline(yintercept = 0,
linetype = 2,
color = "dark grey") +
labs(y = "Target - Self status rating")
